import math
import time
import pendulum


def get_subscription_status_string(chat_id_full: str, lang: str, telegram_stars: int, total_msgs: int, last_donate_time: float, cfg, my_db, tr, my_gemini_general, my_groq, my_mistral, my_cohere, my_github) -> str:
    """
    –§–æ—Ä–º–∏—Ä—É–µ—Ç —Å—Ç—Ä–æ–∫—É –æ —Å—Ç–∞—Ç—É—Å–µ –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –µ–≥–æ –∑–≤—ë–∑–¥,
    –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –Ω–∞–ª–∏—á–∏—è API-–∫–ª—é—á–µ–π.
    """
    # 1. –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–µ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å—Ç—Ä–æ–∫ —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º
    texts = {
        'telegram_stars': tr('Telegram stars:', lang, help='Telegram Stars is a new feature that allows users to buy and spend Stars, a new digital currency, on digital goods and services within the Telegram ecosystem, like ebooks, online courses, or items in Telegram games.'),
        'balance_label': tr('–ó–≤—ë–∑–¥ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ:', lang, help="A label for the user's star balance. Full example: '–ó–≤—ë–∑–¥ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ: 150'. Please translate only the label part: '–ó–≤—ë–∑–¥ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ:'"),
        'sub_active': tr('–ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞', lang, help="A status message indicating the user's subscription is active. Example: '‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞'. Please translate only the text: '–ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞'"),
        'next_debit': tr('–°–ª–µ–¥—É—é—â–µ–µ —Å–ø–∏—Å–∞–Ω–∏–µ:', lang, help="A label for the date of the next automatic payment. Full example: '–°–ª–µ–¥—É—é—â–µ–µ —Å–ø–∏—Å–∞–Ω–∏–µ: 07 –∞–≤–≥—É—Å—Ç–∞ 2025'. Please translate only the label part: '–°–ª–µ–¥—É—é—â–µ–µ —Å–ø–∏—Å–∞–Ω–∏–µ:'"),
        'balance_enough_until': tr('–¢–µ–∫—É—â–µ–≥–æ –±–∞–ª–∞–Ω—Å–∞ —Ö–≤–∞—Ç–∏—Ç –¥–æ:', lang, help="A label indicating the future date until which the user's current balance will last. Full example: '–¢–µ–∫—É—â–µ–≥–æ –±–∞–ª–∞–Ω—Å–∞ —Ö–≤–∞—Ç–∏—Ç –¥–æ: 07 —Å–µ–Ω—Ç—è–±—Ä—è 2025'. Please translate only the label part: '–¢–µ–∫—É—â–µ–≥–æ –±–∞–ª–∞–Ω—Å–∞ —Ö–≤–∞—Ç–∏—Ç –¥–æ:'"),
        'sub_expired': tr('–ü–æ–¥–ø–∏—Å–∫–∞ –∏—Å—Ç–µ–∫–ª–∞', lang, help="A status message indicating the user's subscription has expired. Example: '‚ö†Ô∏è –ü–æ–¥–ø–∏—Å–∫–∞ –∏—Å—Ç–µ–∫–ª–∞'. Please translate only the text: '–ü–æ–¥–ø–∏—Å–∫–∞ –∏—Å—Ç–µ–∫–ª–∞'"),
        'last_payment': tr('–ü–æ—Å–ª–µ–¥–Ω–∏–π –ø–ª–∞—Ç—ë–∂:', lang, help="A label for the date of the user's last payment. Full example: '–ü–æ—Å–ª–µ–¥–Ω–∏–π –ø–ª–∞—Ç—ë–∂: 08 –∏—é–ª—è 2025'. Please translate only the label part: '–ü–æ—Å–ª–µ–¥–Ω–∏–π –ø–ª–∞—Ç—ë–∂:'"),
        'payment_due_part1': tr('–°–ª–µ–¥—É—é—â–∏–π –ø–ª–∞—Ç—ë–∂ –≤ —Ä–∞–∑–º–µ—Ä–µ', lang, help="This is the first part of a sentence. The full original sentence is: '–°–ª–µ–¥—É—é—â–∏–π –ø–ª–∞—Ç—ë–∂ –≤ —Ä–∞–∑–º–µ—Ä–µ 50 üåü –±—É–¥–µ—Ç —Å–ø–∏—Å–∞–Ω –ø—Ä–∏ –≤–∞—à–µ–º —Å–ª–µ–¥—É—é—â–µ–º –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ –±–æ—Ç—É.' Please translate only the initial part: '–°–ª–µ–¥—É—é—â–∏–π –ø–ª–∞—Ç—ë–∂ –≤ —Ä–∞–∑–º–µ—Ä–µ'"),
        'payment_due_part2': tr('–±—É–¥–µ—Ç —Å–ø–∏—Å–∞–Ω –ø—Ä–∏ –≤–∞—à–µ–º —Å–ª–µ–¥—É—é—â–µ–º –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ –±–æ—Ç—É.', lang, help="This is the second part of a sentence. The full original sentence is: '–°–ª–µ–¥—É—é—â–∏–π –ø–ª–∞—Ç—ë–∂ –≤ —Ä–∞–∑–º–µ—Ä–µ 50 üåü –±—É–¥–µ—Ç —Å–ø–∏—Å–∞–Ω –ø—Ä–∏ –≤–∞—à–µ–º —Å–ª–µ–¥—É—é—â–µ–º –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ –±–æ—Ç—É.' Please translate only the final part: '–±—É–¥–µ—Ç —Å–ø–∏—Å–∞–Ω –ø—Ä–∏ –≤–∞—à–µ–º —Å–ª–µ–¥—É—é—â–µ–º –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ –±–æ—Ç—É.'"),
        'not_enough_to_renew': tr('–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–ª—è –ø—Ä–æ–¥–ª–µ–Ω–∏—è', lang, help="A short note in parentheses indicating the user's balance is too low to renew the subscription. Full example: '–ó–≤—ë–∑–¥ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ: 20 (–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–ª—è –ø—Ä–æ–¥–ª–µ–Ω–∏—è)'. Please translate only the part in parentheses: '–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–ª—è –ø—Ä–æ–¥–ª–µ–Ω–∏—è'"),
        'sub_inactive_stars': tr('–ü–æ–¥–ø–∏—Å–∫–∞ –ø–æ –∑–≤—ë–∑–¥–∞–º –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞', lang, help="A status message indicating the subscription that uses 'Stars' currency is not active. Example: '‚ùå –ü–æ–¥–ø–∏—Å–∫–∞ –ø–æ –∑–≤—ë–∑–¥–∞–º –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞'. Please translate only the text: '–ü–æ–¥–ø–∏—Å–∫–∞ –ø–æ –∑–≤—ë–∑–¥–∞–º –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞'"),
        'resume_with_stars_or_keys': tr('–î–ª—è –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–ø–æ–ª–Ω–∏—Ç—å —Å—á—ë—Ç –∑–≤—ë–∑–¥–∞–º–∏ –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ —Å–≤–æ–∏ API-–∫–ª—é—á–∏ (–∫–æ–º–∞–Ω–¥–∞ /keys).', lang, help="A call-to-action message for a user with an inactive subscription, explaining how to resume service. The text is a full sentence.")
    }

    # 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∫–ª—é—á–µ–π –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    have_keys = (
        (chat_id_full in my_gemini_general.USER_KEYS) or
        (chat_id_full in my_groq.USER_KEYS) or
        (chat_id_full in my_mistral.USER_KEYS) or
        (chat_id_full in my_cohere.USER_KEYS) or
        (chat_id_full in my_github.USER_KEYS)
    )
    #DEBUG
    # have_keys = False

    MAX_TOTAL_MESSAGES = getattr(cfg, 'MAX_TOTAL_MESSAGES', 999999)
    DONATE_PRICE = getattr(cfg, 'DONATE_PRICE', 1)

    # 3. –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
    if total_msgs <= MAX_TOTAL_MESSAGES or have_keys:
        icon = 'üåü' if telegram_stars > 0 else '‚≠êÔ∏è'
        return f"{icon} {texts['telegram_stars']} {telegram_stars} /stars"

    SECONDS_IN_MONTH = 60 * 60 * 24 * 30
    stars_balance_str = f"üåü {texts['balance_label']} {telegram_stars}"
    is_active = (time.time() - last_donate_time) < SECONDS_IN_MONTH if last_donate_time else False

    if is_active:
        # –°—Ü–µ–Ω–∞—Ä–∏–π 2: –ê–∫—Ç–∏–≤–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞
        affordable_renewals = max(0, math.floor(telegram_stars / DONATE_PRICE))
        current_expiry_date = pendulum.from_timestamp(last_donate_time).add(months=1)
        final_expiry_date = current_expiry_date.add(months=affordable_renewals)

        try:
            current_expiry_date_str = current_expiry_date.format('DD MMMM YYYY', locale=lang)
            final_expiry_date_str = final_expiry_date.format('DD MMMM YYYY', locale=lang)
        except Exception:
            current_expiry_date_str = current_expiry_date.format('DD MMMM YYYY', locale='en')
            final_expiry_date_str = final_expiry_date.format('DD MMMM YYYY', locale='en')

        return (
            f"{stars_balance_str}\n"
            f"‚úÖ {texts['sub_active']}\n"
            f"{texts['next_debit']} {current_expiry_date_str}\n"
            f"üí∞ {texts['balance_enough_until']} {final_expiry_date_str}"
        )
    else:
        # –°—Ü–µ–Ω–∞—Ä–∏–∏ 3 –∏ 4: –ü–æ–¥–ø–∏—Å–∫–∞ –∏—Å—Ç–µ–∫–ª–∞
        if telegram_stars >= DONATE_PRICE:
            # –°—Ü–µ–Ω–∞—Ä–∏–π 3: –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–≤—ë–∑–¥ –¥–ª—è –ø—Ä–æ–¥–ª–µ–Ω–∏—è
            msg = f"{stars_balance_str}\n‚ö†Ô∏è {texts['sub_expired']}"
            if last_donate_time:
                try:
                    last_payment_str = pendulum.from_timestamp(last_donate_time).format('DD MMMM YYYY', locale=lang)
                except Exception:
                    last_payment_str = pendulum.from_timestamp(last_donate_time).format('DD MMMM YYYY', locale='en')
                msg += f"\n{texts['last_payment']} {last_payment_str}"

            # <<< –ò–ó–ú–ï–ù–ï–ù–ò–ï –ó–î–ï–°–¨: –°–æ–±–∏—Ä–∞–µ–º —Å—Ç—Ä–æ–∫—É –∏–∑ –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–Ω—ã—Ö —á–∞—Å—Ç–µ–π –∏ —á–∏—Å–ª–∞ >>>
            payment_due_msg = f"{texts['payment_due_part1']} {DONATE_PRICE} üåü {texts['payment_due_part2']}"
            msg += f"\n{payment_due_msg}"
            return msg
        else:
            # –°—Ü–µ–Ω–∞—Ä–∏–π 4: –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–≤—ë–∑–¥
            stars_balance_str += f" ({texts['not_enough_to_renew']})"
            msg = f"{stars_balance_str}\n‚ùå {texts['sub_inactive_stars']}"
            if last_donate_time:
                try:
                    last_payment_str = pendulum.from_timestamp(last_donate_time).format('DD MMMM YYYY', locale=lang)
                except Exception:
                    last_payment_str = pendulum.from_timestamp(last_donate_time).format('DD MMMM YYYY', locale='en')
                msg += f"\n{texts['last_payment']} {last_payment_str}"

            msg += f"\n{texts['resume_with_stars_or_keys']}"
            return msg
